{"version":3,"sources":["components/Container/Container.module.css","components/Searchbar/Searchbar.js","components/Container/Container.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","services/hits-api.js","App.js","index.js"],"names":["module","exports","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","Container","children","style","container","ImageGalleryItem","webformatURL","onClick","tags","src","alt","ImageGallery","hits","onOpenModalImg","map","id","largeImageURL","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","Button","fetchHits","searchQuery","currentPage","pageSize","axios","get","then","response","data","App","isLoading","showModal","error","onChangeQuery","options","hitsApi","prevState","catch","finally","toogleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.895a8d3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1EYk8\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\nclass Searchbar extends Component {\r\n    static propTypes = {\r\n        query: PropTypes.string,\r\n    };\r\n    \r\n    state = {\r\n        query: ''\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ query: event.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query)\r\n\r\n        this.setState({query: ''})\r\n    }\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n\r\n        return (\r\n    <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                value={query}\r\n                onChange={this.handleChange}\r\n            />\r\n        </form>\r\n    </header>\r\n    )\r\n}\r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst ImageGalleryItem = ({webformatURL, onClick, tags}) => (\r\n    <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onClick}\r\n    />\r\n);\r\n    \r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\n\r\nconst ImageGallery = ({ hits, onOpenModalImg }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => {\r\n                const handleImgClick = () => onOpenModalImg(largeImageURL);\r\n                return (\r\n                    <li key={id}>\r\n                        <ImageGalleryItem\r\n                            webformatURL={webformatURL}\r\n                            onClick={handleImgClick}\r\n                        />\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired,\r\n    onOpenModalImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import Loader from \"react-loader-spinner\";\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport '../../style.css';\r\n\r\nconst loader = () => (\r\n    <Loader\r\n        className=\"Loader\"\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n    />\r\n);\r\n\r\nexport default loader;","import React, { Component } from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport '../../style.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        // console.log(111);\r\n\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // console.log(333);\r\n\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onClose();\r\n        };\r\n    };\r\n\r\n    handleOverlayClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return createPortal (\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    };\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios\r\n        .get(\r\n        `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=21813787-5b33d57d4a7410a6824d2f569&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response =>response.data.hits)\r\n}\r\n\r\nexport default fetchHits;","import React, { Component } from 'react';\r\nimport Searchbar from './components/Searchbar';\r\nimport Container from './components/Container'\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Loader from './components/Loader'\r\nimport Modal from './components/Modal/Modal';\r\nimport Button from './components/Button';\r\nimport hitsApi from './services/hits-api';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    hits: PropTypes.array,\r\n    searchQuery: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    showModal: PropTypes.bool,\r\n    largeImageURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n    error: PropTypes.string,\r\n  }\r\n  state = {\r\n    hits: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    showModal: false,\r\n    largeImageURL: '',\r\n    tags: '',\r\n    error: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchHits();\r\n    };\r\n\r\n    if (this.state.searchQuery !== 2 && prevState.currentPage !== this.state.currentPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    };\r\n  };\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1, hits: [], error: null });\r\n  };\r\n\r\n  fetchHits = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n\r\n    const options = {\r\n      searchQuery,\r\n      currentPage,\r\n    };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    hitsApi(options)\r\n      .then(hits => {\r\n        this.setState(prevState => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error: 'Sorry! Picture not found. Please try again later!!!' }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n\r\n  }\r\n\r\n  toogleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  onOpenModalImg = (largeImageURL = '') => {\r\n    this.setState({ largeImageURL });\r\n    this.toogleModal();\r\n  };\r\n\r\n  render() {\r\n    const { hits, isLoading, showModal, largeImageURL, tags, error } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        \r\n        {error && <h1>{error}</h1>}\r\n\r\n        <Container>\r\n\r\n          <ImageGallery\r\n            hits={hits}\r\n            onOpenModalImg={this.onOpenModalImg}\r\n          />\r\n\r\n          {isLoading && <Loader/>}\r\n\r\n          {hits.length > 11 && !isLoading && (\r\n            <Button onClick={this.fetchHits} />\r\n          )}\r\n          \r\n        {showModal && (\r\n          <Modal onClose = {this.onOpenModalImg}>\r\n            <img src={largeImageURL} alt={tags} />\r\n            {/* <button type=\"button\" onClick={this.toogleModal}>Close</button> */}\r\n          </Modal>\r\n        )\r\n        }\r\n        </Container>\r\n        </>\r\n    );\r\n  }\r\n};\r\n            \r\n      \r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}