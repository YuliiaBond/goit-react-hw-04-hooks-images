{"version":3,"sources":["components/Container/Container.module.css","components/Searchbar/Searchbar.js","components/Container/Container.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","services/hits-api.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Container","children","style","container","ImageGalleryItem","webformatURL","onClick","largeImageURL","tags","src","alt","ImageGallery","hits","onOpenModalImg","map","id","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","Button","fetchHits","searchQuery","currentPage","pageSize","axios","get","then","response","data","App","setHits","setCurrentPage","isLoading","setIsLoading","setLargeImageURL","error","setError","hitsApi","prevState","scrollTo","top","body","scrollHeight","behavior","catch","finally","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebd43227.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1EYk8\"};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\n\r\nexport default function Searchbar ({onSubmit}) {\r\n    const [query, setQuery] = useState('');\r\n    \r\n    const handleChange = event => {\r\n        setQuery(event.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (query.trim() === '') {\r\n            alert('Enter your request, please!');\r\n            return;\r\n        }\r\n\r\n        onSubmit(query);\r\n        setQuery('');\r\n    }\r\n\r\n        return (\r\n    <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                value={query}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    </header>\r\n    )\r\n\r\n};\r\n\r\nSearchbar.propTypes = {\r\n        query: PropTypes.string,\r\n    };\r\n\r\n\r\n// class Searchbar extends Component {\r\n//     static propTypes = {\r\n//         query: PropTypes.string,\r\n//     };\r\n    \r\n//     state = {\r\n//         query: ''\r\n//     };\r\n\r\n//     handleChange = event => {\r\n//         this.setState({ query: event.currentTarget.value });\r\n//     };\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault();\r\n\r\n//         this.props.onSubmit(this.state.query)\r\n\r\n//         this.setState({query: ''})\r\n//     }\r\n\r\n//     render() {\r\n//         const { query } = this.state;\r\n\r\n//         return (\r\n//     <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n//             <button type=\"submit\" className=\"SearchForm-button\">\r\n//                 <span className=\"SearchForm-button-label\">Search</span>\r\n//             </button>\r\n\r\n//             <input\r\n//                 className=\"SearchForm-input\"\r\n//                 type=\"text\"\r\n//                 autoComplete=\"off\"\r\n//                 autoFocus\r\n//                 placeholder=\"Search images and photos\"\r\n//                 value={query}\r\n//                 onChange={this.handleChange}\r\n//             />\r\n//         </form>\r\n//     </header>\r\n//     )\r\n// }\r\n// };\r\n\r\n// export default Searchbar;","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst ImageGalleryItem = ({webformatURL, onClick, largeImageURL, tags}) => (\r\n    <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => {\r\n            onClick({ largeImageURL })\r\n        }}\r\n    />\r\n);\r\n    \r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\n\r\nconst ImageGallery = ({ hits, onOpenModalImg }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => {\r\n                const handleImgClick = () => onOpenModalImg(largeImageURL);\r\n                return (\r\n                    <li key={id}>\r\n                        <ImageGalleryItem\r\n                            webformatURL={webformatURL}\r\n                            onClick={handleImgClick}\r\n                        />\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired,\r\n    onOpenModalImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import Loader from \"react-loader-spinner\";\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport '../../style.css';\r\n\r\nconst loader = () => (\r\n    <Loader\r\n        className=\"Loader\"\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n    />\r\n);\r\n\r\nexport default loader;","import React, { useEffect } from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport '../../style.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({onClose, children}) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => window.removeEventListener('keydown', handleKeyDown);\r\n    });\r\n\r\n    const handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n    const handleOverlayClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            onClose();\r\n        };\r\n    };\r\n\r\n        return createPortal (\r\n            <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n                <div className=\"Modal\">{children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n// class Modal extends Component {\r\n//     componentDidMount() {\r\n//         // console.log(111);\r\n\r\n//         window.addEventListener('keydown', this.handleKeyDown)\r\n//     };\r\n\r\n//     componentWillUnmount() {\r\n//         // console.log(333);\r\n\r\n//         window.removeEventListener('keydown', this.handleKeyDown)\r\n//     };\r\n\r\n//     handleKeyDown = event => {\r\n//         if (event.code === 'Escape') {\r\n//             this.props.onClose();\r\n//         };\r\n//     };\r\n\r\n//     handleOverlayClick = event => {\r\n//         if (event.currentTarget === event.target) {\r\n//             this.props.onClose();\r\n//         };\r\n//     };\r\n\r\n//     render() {\r\n//         return createPortal (\r\n//             <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n//                 <div className=\"Modal\">{this.props.children}</div>\r\n//             </div>,\r\n//             modalRoot,\r\n//         );\r\n//     };\r\n// };\r\n\r\n// export default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios\r\n        .get(\r\n        `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=21813787-5b33d57d4a7410a6824d2f569&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response =>response.data.hits)\r\n}\r\n\r\nexport default fetchHits;","import React, { useState, useEffect } from 'react';\r\nimport Searchbar from './components/Searchbar';\r\nimport Container from './components/Container'\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Loader from './components/Loader'\r\nimport Modal from './components/Modal/Modal';\r\nimport Button from './components/Button';\r\nimport hitsApi from './services/hits-api';\r\n// import PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nexport default function App() {\r\n  const [hits, setHits] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  // const [tags, setTags] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (query === '') {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    hitsApi({ searchQuery: query, currentPage })\r\n      .then(hits => {\r\n        setHits(prevState => [...prevState, ...hits])\r\n        \r\n      })\r\n      \r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.body.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n          .catch(error => setError({ error: 'Sorry! Picture not found. Please try again later!!!' }))\r\n          .finally(() => setIsLoading(false));\r\n      }, [query, currentPage]);\r\n\r\n    const onChangeQuery = query => {\r\n      setQuery(query);\r\n      setCurrentPage(1);\r\n      setHits([]);\r\n      setError(null);\r\n    }\r\n\r\n    const onOpenModalImg = (largeImageURL) => {\r\n      setLargeImageURL(largeImageURL);\r\n      };\r\n    \r\n\r\n    const toogleModal = () => {\r\n      setLargeImageURL('');\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={onChangeQuery} />\r\n        \r\n        {error && <h1>{error}</h1>}\r\n\r\n        <Container>\r\n\r\n          <ImageGallery\r\n            hits={hits}\r\n            onOpenModalImg={onOpenModalImg}\r\n          />\r\n\r\n          {isLoading && <Loader />}\r\n\r\n          {hits.length > 11 && !isLoading && (\r\n            <Button onClick={() => setCurrentPage(currentPage + 1)} />\r\n          )}\r\n          \r\n          {largeImageURL && (\r\n            <Modal onClose={toogleModal}>\r\n              <img src={largeImageURL} alt=\"card\" />\r\n            </Modal>\r\n          )\r\n          }\r\n        </Container>\r\n      </>\r\n    );\r\n};\r\n\r\n// class App extends Component {\r\n//   static propTypes = {\r\n//     hits: PropTypes.array,\r\n//     searchQuery: PropTypes.string,\r\n//     currentPage: PropTypes.number,\r\n//     isLoading: PropTypes.bool,\r\n//     showModal: PropTypes.bool,\r\n//     largeImageURL: PropTypes.string,\r\n//     tags: PropTypes.string,\r\n//     error: PropTypes.string,\r\n//   }\r\n//   state = {\r\n//     hits: [],\r\n//     searchQuery: '',\r\n//     currentPage: 1,\r\n//     isLoading: false,\r\n//     showModal: false,\r\n//     largeImageURL: '',\r\n//     tags: '',\r\n//     error: '',\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.searchQuery !== this.state.searchQuery) {\r\n//       this.fetchHits();\r\n//     };\r\n\r\n//     if (this.state.searchQuery !== 2 && prevState.currentPage !== this.state.currentPage) {\r\n//       window.scrollTo({\r\n//         top: document.documentElement.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     };\r\n//   };\r\n\r\n//   onChangeQuery = query => {\r\n//     this.setState({ searchQuery: query, currentPage: 1, hits: [], error: null });\r\n//   };\r\n\r\n//   fetchHits = () => {\r\n//     const { searchQuery, currentPage } = this.state;\r\n\r\n//     const options = {\r\n//       searchQuery,\r\n//       currentPage,\r\n//     };\r\n\r\n//     this.setState({ isLoading: true });\r\n\r\n//     hitsApi(options)\r\n//       .then(hits => {\r\n//         this.setState(prevState => ({\r\n//           hits: [...prevState.hits, ...hits],\r\n//           currentPage: prevState.currentPage + 1,\r\n//         }));\r\n//       })\r\n//       .catch(error => this.setState({ error: 'Sorry! Picture not found. Please try again later!!!' }))\r\n//       .finally(() => this.setState({ isLoading: false }));\r\n\r\n//   }\r\n\r\n//   toogleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   onOpenModalImg = (largeImageURL = '') => {\r\n//     this.setState({ largeImageURL });\r\n//     this.toogleModal();\r\n//   };\r\n\r\n//   render() {\r\n//     const { hits, isLoading, showModal, largeImageURL, tags, error } = this.state;\r\n//     return (\r\n//       <>\r\n//         <Searchbar onSubmit={this.onChangeQuery} />\r\n        \r\n//         {error && <h1>{error}</h1>}\r\n\r\n//         <Container>\r\n\r\n//           <ImageGallery\r\n//             hits={hits}\r\n//             onOpenModalImg={this.onOpenModalImg}\r\n//           />\r\n\r\n//           {isLoading && <Loader/>}\r\n\r\n//           {hits.length > 11 && !isLoading && (\r\n//             <Button onClick={this.fetchHits} />\r\n//           )}\r\n          \r\n//         {showModal && (\r\n//           <Modal onClose = {this.onOpenModalImg}>\r\n//             <img src={largeImageURL} alt={tags} />\r\n//             {/* <button type=\"button\" onClick={this.toogleModal}>Close</button> */}\r\n//           </Modal>\r\n//         )\r\n//         }\r\n//         </Container>\r\n//         </>\r\n//     );\r\n//   }\r\n// };\r\n            \r\n      \r\n\r\n\r\n// export default App;\r\n  \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}